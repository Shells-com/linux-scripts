#!/bin/sh

deepin_distro() {
    local SUITE="apricot"

    case "$1" in
    *-base)
        create_empty
        # hack for deepin, debootstrap does not support deepin, some packages need to be replaced.
        debootstrap --include=wget,curl,net-tools,rsync,openssh-server,sudo buster "$WORK" https://mirrors.ustc.edu.cn/debian/

        # make sudo available without password (default for key auth)
        echo "%shellsmgmt ALL=(ALL) NOPASSWD: ALL" >"$WORK/etc/sudoers.d/01-shells"
        chmod 440 "$WORK/etc/sudoers.d/01-shells"

        DEBIAN_FRONTEND=noninteractive run apt install ca-certificates -y

        cat >"$WORK/etc/apt/sources.list" <<EOF
## Generated by deepin-installer
deb [trusted=yes] https://community-packages.deepin.com/deepin/ apricot main contrib non-free
#deb-src https://community-packages.deepin.com/deepin/ apricot main contrib non-free
EOF

        echo 'LANG=en_US.UTF-8' >"$WORK/etc/default/locale"
        export LANG=en_US.UTF-8
        run apt update
        DEBIAN_FRONTEND=noninteractive run apt install deepin-keyring -y
        DEBIAN_FRONTEND=noninteractive run apt install base-files bash -y

        cat >"$WORK/etc/apt/sources.list" <<EOF
## Generated by deepin-installer
deb [by-hash=force] https://community-packages.deepin.com/deepin/ apricot main contrib non-free
#deb-src https://community-packages.deepin.com/deepin/ apricot main contrib non-free
EOF

        cat >"$WORK/etc/apt/sources.list.d/printer.list" <<EOF
deb https://community-packages.deepin.com/printer eagle non-free
EOF

        cat >"$WORK/etc/apt/sources.list.d/appstore.list" <<EOF
deb https://community-store-packages.deepin.com/appstore eagle appstore
EOF
        # hack: deepin-keyring need change
        run apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 1C30362C0A53D5BB
        run apt update
        DEBIAN_FRONTEND=noninteractive run apt dist-upgrade -y
        DEBIAN_FRONTEND=noninteractive run apt install -y locales-all python3-distro-info kmod qemu-guest-agent
        ;;
    *)
        # start from base
        if [ ! -f "deepin-$SUITE-base.qcow2" ]; then
            # base is missing, build it
            dodistro "deepin-$SUITE-base"
        fi

        prepare "deepin-$SUITE-base"
        deepin_cfg "$1"
        ;;
    esac
}

deepin_cfg() {
    # make sure we have i386 enabled
    run dpkg --add-architecture i386 || true
    run apt update

    DEBIAN_FRONTEND=noninteractive run apt dist-upgrade -y

    # make sure we have qemu-guest-agent always
    DEBIAN_FRONTEND=noninteractive run apt install -y qemu-guest-agent

    # ensure guest tools
    case "$1" in
    *desktop)
        DEBIAN_FRONTEND=noninteractive run apt install -y xserver-xorg-video-qxl spice-vdagent spice-webdavd cryptsetup wine64 wine32 git bash-completion
        run systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
        ;;
    esac

    # if deepin
    case "$1" in
    deepin-*-desktop)
        DEBIAN_FRONTEND=noninteractive run apt install -y startdde
        run systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
        run systemctl enable lightdm -f
        ;;
    esac

    # network config based on netplan
    DEBIAN_FRONTEND=noninteractive run apt install -y netplan.io networkd-dispatcher

    # fix network config
    cat >"$WORK/etc/netplan/config.yaml" <<EOF
network:
  version: 2
  renderer: NetworkManager
  ethernets:
    eth0:
      match:
        name: e*
      dhcp4: true
EOF

    # remove ssh key files if any
    rm -f "$WORK/etc/ssh"/ssh_host_* || true

    # add shells-helper to /etc/skel
    if [ ! -f "$WORK/etc/skel/.bin/shells-helper" ]; then
        mkdir -p "$WORK/etc/skel/.bin"
        local O="$PWD"
        cd "$WORK/etc/skel/.bin"
        curl -s https://raw.githubusercontent.com/KarpelesLab/make-go/master/get.sh | /bin/sh -s shells-helper
        cd "$O"
    fi

    # new .profile file
    echo "#!/bin/sh" >"$WORK/etc/skel/.profile"
    echo "xset s off" >>"$WORK/etc/skel/.profile"
    echo 'while true; do $HOME/.bin/shells-helper >/dev/null 2>&1; sleep 30; done &' >>"$WORK/etc/skel/.profile"
    echo >>"$WORK/etc/skel/.profile"
    chmod +x "$WORK/etc/skel/.profile"

    # add firstrun
    add_firstrun NetworkManager-wait-online.service
    do_linux_config

    if [ -f "$WORK/usr/bin/gsettings" ]; then
        # setup wine mime type
        mkdir -p "$WORK/etc/skel/.local/share/applications"
        cat >"$WORK/etc/skel/.local/share/applications/wine.desktop" <<EOF
[Desktop Entry]
Name=Wine
Comment=Run Windows Applications
Exec=wine
Terminal=false
Icon=wine
Type=Application
Categories=Utility;
NoDisplay=true
EOF
        cat >"$WORK/etc/skel/.local/share/applications/mimeapps.list" <<EOF
[Default Applications]
application/x-ms-dos-executable=wine.desktop
EOF

    fi

    # cleanup apt
    run apt clean && run apt update
}
